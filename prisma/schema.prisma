// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id    String @id @default(cuid())
  email String @unique
  nome  String
  senha String
}

model Produto {
  id                Int                @id @default(autoincrement())
  nome              String
  preco             Float
  imagemurl         String
  categoriaProdutos CategoriaProduto[] // relação com a join table

  @@map("produto")
}

model Categoria {
  id        Int     @id @default(autoincrement())
  nome      String  @unique
  subtitulo String?
  imagemurl String?

  categoriaProdutos CategoriaProduto[] // relação com a join table

  @@map("categoria")
}

model CategoriaProduto {
  id           Int @id @default(autoincrement())
  produto_id   Int
  categoria_id Int

  produto   Produto   @relation(fields: [produto_id], references: [id])
  categoria Categoria @relation(fields: [categoria_id], references: [id])

  @@unique([produto_id, categoria_id]) // evita duplicações
  @@map("categoria_produto") // nome da tabela no banco
}

model Beneficio {
  id        Int    @id @default(autoincrement())
  titulo    String
  descricao String
  icon      String

  @@map("beneficio")
}

model SlideText {
  id    Int    @id @default(autoincrement())
  texto String
  icon  String

  @@map("slidetext")
}

model FooterBannerImg {
  id        Int    @id @default(autoincrement())
  nome      String
  imagemurl String

  @@map("footer_banner_imgs")
}

// Verificar novamente valores que não podem ser nulos nos campos do banco de dados
